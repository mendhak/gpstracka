<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ErrorIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\eventlogError.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="InfoIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\eventlogInfo.ico;System.Drawing.Icon, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="LineColor" xml:space="preserve">
    <value>Line color</value>
  </data>
  <data name="err_InvalidKmlPointNameFormat" xml:space="preserve">
    <value>Given format for KML point name is invalid</value>
  </data>
  <data name="err_InvalidKmlPointDescFormat" xml:space="preserve">
    <value>Given format for KML point description is invalid</value>
  </data>
  <data name="err_InvalidLogFormat" xml:space="preserve">
    <value>Given log format is invalid</value>
  </data>
  <data name="format_KmlDescDefault" xml:space="preserve">
    <value>{0:yyyy-MM-ddTHH:mm:ssZ}</value>
  </data>
  <data name="format_TextLogDefault" xml:space="preserve">
    <value>{4:H:mm:ss} {1},{2}, {3}</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>please wait ...</value>
  </data>
  <data name="err_PathMustBeRooted" xml:space="preserve">
    <value>Path must be rooted</value>
  </data>
  <data name="err_SelectFolderPlease" xml:space="preserve">
    <value>Select folder, please.</value>
  </data>
  <data name="err_PositionIsNull" xml:space="preserve">
    <value>Position part is null.</value>
  </data>
  <data name="GPSTrackaVersion" xml:space="preserve">
    <value>GPSTracka Version</value>
  </data>
  <data name="PressStart" xml:space="preserve">
    <value>Press Start</value>
  </data>
  <data name="err_ErrorTitle" xml:space="preserve">
    <value>Error:</value>
  </data>
  <data name="Opening" xml:space="preserve">
    <value>Opening...</value>
  </data>
  <data name="Running" xml:space="preserve">
    <value>Running...</value>
  </data>
  <data name="status_Running" xml:space="preserve">
    <value>running...</value>
  </data>
  <data name="status_Opening" xml:space="preserve">
    <value>opening...</value>
  </data>
  <data name="Stopped" xml:space="preserve">
    <value>Stopped.</value>
  </data>
  <data name="Status_Stopped" xml:space="preserve">
    <value>GPS stopped</value>
  </data>
  <data name="Stopping" xml:space="preserve">
    <value>Stopping...</value>
  </data>
  <data name="Status_Stopping" xml:space="preserve">
    <value>GPS stopping</value>
  </data>
  <data name="err_NmeaCreateDir" xml:space="preserve">
    <value>Cannot create directory for NMEA file {0}: {1}</value>
  </data>
  <data name="err_NmeaOpenFile" xml:space="preserve">
    <value>Cannot open NMEA file {0}: {1}</value>
  </data>
  <data name="status_PositionReceived" xml:space="preserve">
    <value>position received</value>
  </data>
  <data name="PointsTooNear" xml:space="preserve">
    <value>Points too near {0:0}m</value>
  </data>
  <data name="status_InvalidPosWait" xml:space="preserve">
    <value>inv. pos. {0} - wait</value>
  </data>
  <data name="status_InvalidPos" xml:space="preserve">
    <value>inv. pos. {0}</value>
  </data>
  <data name="ZeroKmH" xml:space="preserve">
    <value>0km/h</value>
  </data>
  <data name="err_WriteToFile" xml:space="preserve">
    <value>Couldn't write location to file. Try changing locations.</value>
  </data>
  <data name="err_CreateDir" xml:space="preserve">
    <value>Cannot create the directory specified.  Try another location.</value>
  </data>
  <data name="err_ERROR" xml:space="preserve">
    <value>ERROR</value>
  </data>
  <data name="ContinueInCurrentFile" xml:space="preserve">
    <value>Do you want to continue in current file {0}?</value>
  </data>
  <data name="WillBeginReading" xml:space="preserve">
    <value>Will begin to read GPS data after {0} seconds.</value>
  </data>
  <data name="Starting" xml:space="preserve">
    <value>starting ...</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Status_Stopped_simple" xml:space="preserve">
    <value>stopped</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="ConfirmExit" xml:space="preserve">
    <value>Do you really want to exit?
GPS Logging will stop.</value>
  </data>
  <data name="TrackSaved" xml:space="preserve">
    <value>Current track is saved.</value>
  </data>
  <data name="err_HelpNotAvailable" xml:space="preserve">
    <value>Help file {0} is not availbale.
{1}</value>
  </data>
  <data name="Recommended" xml:space="preserve">
    <value>Recommended:</value>
  </data>
  <data name="err_BadPath" xml:space="preserve">
    <value>Please select a proper file path</value>
  </data>
  <data name="FormatTestInfo" xml:space="preserve">
    <value>UTC now={0}, lon={1}, lat={2}, alt={3}, now={4}, el.unit={5}
The result is:
</value>
  </data>
  <data name="ExapleOfFormatting" xml:space="preserve">
    <value>Exaple of formatting</value>
  </data>
  <data name="err_InvalidFormatString" xml:space="preserve">
    <value>Error, the format string is invalid.
</value>
  </data>
  <data name="err_ErrorTitleMsg" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="err_PowerPolicyNotifiyFailed" xml:space="preserve">
    <value>Warning: Failed to set power policy for unattended mode. This may cause device to fall asleep and stop recording your track.</value>
  </data>
  <data name="Latitude" xml:space="preserve">
    <value>Latitude</value>
  </data>
  <data name="Longitude" xml:space="preserve">
    <value>Longitude</value>
  </data>
  <data name="Altitude" xml:space="preserve">
    <value>Altitude</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="DateTime" xml:space="preserve">
    <value>Date + Time</value>
  </data>
  <data name="err_CSVSeparatorEmpty" xml:space="preserve">
    <value>CSV separator cannot be empty.</value>
  </data>
  <data name="err_CSVQualifierEmpty" xml:space="preserve">
    <value>CSV text qualifier cannot be empty.</value>
  </data>
  <data name="err_NoCSVFields" xml:space="preserve">
    <value>Select at least one CSV field.</value>
  </data>
  <data name="err_InvalidCSVDateFormat" xml:space="preserve">
    <value>Format of date in CSV file is invalid:</value>
  </data>
  <data name="DateFormatTest" xml:space="preserve">
    <value>Date format test</value>
  </data>
  <data name="DateTestMessage" xml:space="preserve">
    <value>Date = {0}
Value = {1}</value>
  </data>
  <data name="err_InvalidFormat" xml:space="preserve">
    <value>The format is invalid.</value>
  </data>
  <data name="msg_LngChange" xml:space="preserve">
    <value>In order change in language to take effect, you must restart GPSTracka.</value>
  </data>
  <data name="COMPort" xml:space="preserve">
    <value>Comm port</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Format</value>
  </data>
  <data name="LoggingOptions" xml:space="preserve">
    <value>Logging options</value>
  </data>
  <data name="PollingRate" xml:space="preserve">
    <value>Polling rate</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>default</value>
  </data>
  <data name="Satellite_Started" xml:space="preserve">
    <value>Sat. open</value>
  </data>
  <data name="Satellite_Stopped" xml:space="preserve">
    <value>Sat. closed</value>
  </data>
</root>